<%

value = function(val, arg1) {
    if(val==null || val=='undefined'){
        return '---';
    }

    if (val instanceof Date) {
        return formatDate(new Date(val)); // Es una fecha
    }

    if (typeof val === 'string' || typeof val === 'number'){
        return titleCase(''+val);
    }
    if (arg1){
        const accesors = arg1.split('.');
        if (accesors.length) {
            const field = accesors.shift();
            return value(val[field], accesors.join('.'));
            //if (field in val){
            //    return value(val[field], accesors.join('.'));
            //}
        }
        else{ // Caso base
            if (arg1 in value){
                return value(val[arg1]); // Es un atributo de un objeto
            }    
        }
    }
    if (typeof val._str_ === 'function'){
        return titleCase(val._str_())
    }
    return titleCase(''+val);
}

label = function(value) {
    if(!value){
        return '---';
    } 
    const label = (((value.split('.')).pop()).match(/[A-Z]+[^A-Z]*|[^A-Z]+/g)).join(' ');
    return titleCase(label)
}

titleCase = function(str) {
    const title =str.toLowerCase().split(' ').map(function (word) {
        return (word.charAt(0).toUpperCase() + word.slice(1));
    }).join(' ');
    return title;
}

formatDate = function(date) {
    const month = date.getMonth() + 1;
    const day = date.getDate();
    const year = date.getFullYear();
    return  day + "/" + month + "/" + year;
}

existArticulo = function(element){
    return element._id.toString() == this._id.toString() ;
}

mapTotalesPorArticulos = function(articulos, articulosAusencias){
    articulos = articulos.map(art => {
        const idx = articulosAusencias.findIndex(existArticulo, art);
        art = { 
            ausencias: (idx >= 0)? articulosAusencias[idx].ausenciasPorArticulo : 0,
            _id: art._id    
        }
        return art;
     })
     return articulos;
}

existAnio = function(element){
    const vigencia = ''+element.vigencia;
    const anio = ''+this;
    return vigencia == anio;
}

mapLicenciasPorAnio = function(anios, ausentismo){
    let totalAcumulado = 0;
    let totalResto = 0;
    anios = anios.map(anio => {
        const idx = ausentismo.findIndex(existAnio, anio);
        if (idx >= 0){
            const totales = ausentismo[idx].intervalos[0].totales;
            const ejecutadas = ausentismo[idx].intervalos[0].ejecutadas;
            anio = { 
                tomados: totales,
                resto: totales - ejecutadas
            }
            totalAcumulado = totalAcumulado + anio.tomados;
            totalResto = totalResto + anio.resto;
        }
        else{
            anio = { 
                tomados: '--',
                resto: '--'
            }
        }
        return anio;
     })
     anios.push({ tomados: totalAcumulado, resto: totalResto })
     return anios;
}

%>

